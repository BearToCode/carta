import{s as ga,e as c,a as i,H as G,c as u,l as r,g as k,b as J,m as K,f as n,p as d,i as e,n as na}from"./scheduler.DKiYiPX0.js";import{S as va,i as _a,c as N,a as Q,m as V,t as X,b as Z,d as aa}from"./index.z4bt_ZBS.js";import{C as sa}from"./Code.tlNrnEug.js";function wa($){let t,o,m=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-editor carta-theme__&lt;theme><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token comment">&lt;!-- ... --></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
			<span class="token comment">&lt;!-- Other icons --></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-container mode-&lt;split|tabs><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-input-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-font-code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-font-code<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-renderer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token comment">&lt;!-- Rendered Markdown --></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`;return{c(){t=c("pre"),o=new G(!1),this.h()},l(p){t=u(p,"PRE",{class:!0});var l=J(t);o=K(l,!1),l.forEach(n),this.h()},h(){o.a=null,d(t,"class","language-html")},m(p,l){e(p,t,l),o.m(m,t)},p:na,d(p){p&&n(t)}}}function ya($){let t,o,m=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">// ...</span>
	theme<span class="token operator">:</span> <span class="token string">'github-dark'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){t=c("pre"),o=new G(!1),this.h()},l(p){t=u(p,"PRE",{class:!0});var l=J(t);o=K(l,!1),l.forEach(n),this.h()},h(){o.a=null,d(t,"class","language-ts")},m(p,l){e(p,t,l),o.m(m,t)},p:na,d(p){p&&n(t)}}}function $a($){let t,o,m=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">// ...</span>
	shikiOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		langs<span class="token operator">:</span> <span class="token comment">// ...</span>
		themes<span class="token operator">:</span> <span class="token comment">// ...</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`;return{c(){t=c("pre"),o=new G(!1),this.h()},l(p){t=u(p,"PRE",{class:!0});var l=J(t);o=K(l,!1),l.forEach(n),this.h()},h(){o.a=null,d(t,"class","language-ts")},m(p,l){e(p,t,l),o.m(m,t)},p:na,d(p){p&&n(t)}}}function Ha($){let t,o='<a href="#customizing-editor-styles">Customizing editor styles</a>',m,p,l="While the core styles are embedded in the Svelte components, the others can be set in a custom stylesheet. Here is what the final rendered HTML looks like.",q,h,E,f,ta='<a href="#using-multiple-themes">Using multiple themes</a>',P,H,ea="By using the <code>theme</code> property in <code>&lt;MarkdownEditor&gt;</code> you can differentiate the themes of multiple editors.",S,g,pa='<a href="#dark-mode">Dark mode</a>',O,C,oa="When using dark mode, there are two different themes that have to be changed: the editor theme and the one used for syntax highlighting:",R,x,z,fa=`<code class="language-css"><span class="token comment">/* Editor dark mode */</span>
<span class="token comment">/* Only if you are using the default theme */</span>
<span class="token selector">html.dark .carta-theme__default</span> <span class="token punctuation">&#123;</span>
	<span class="token property">--border-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--border-color-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token property">--selection-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--selection-color-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token property">--focus-outline</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--focus-outline-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token property">--hover-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--hover-color-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token property">--caret-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--caret-color-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token property">--text-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--text-color-dark<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">/* Code dark mode */</span>
<span class="token comment">/* Only if you didn't specify a custom code theme */</span>
<span class="token selector">html.dark .shiki,
html.dark .shiki span</span> <span class="token punctuation">&#123;</span>
	<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--shiki-dark<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,I,v,la='<a href="#changing-markdown-input-color-theme">Changing Markdown input color theme</a>',j,M,ca='Carta uses <a href="https://shiki.matsu.io/" rel="nofollow">Shiki</a> for syntax highlighting. Two default themes are included in the core package, which are set as a <a href="https://shiki.matsu.io/guide/dual-themes" rel="nofollow">dual theme</a> to support light and dark mode. If you plan to use a custom one with light/dark modes, make sure to use a dual theme as well.',W,T,ua="You can change theme in the options:",B,_,D,b,ia='If you use a <a href="https://shiki.matsu.io/guide/load-theme" rel="nofollow">custom theme</a>(or a custom language), you need to provide it inside the options, so that it gets loaded into the highlighter:',U,w,Y,y,ka='<a href="#markdown-stylesheets">Markdown stylesheets</a>',A,L,ra='Markdown is converted into standard HTML, so you can edit the final styles by using standard CSS rules. If you do not wish to create one from the ground up, you can use some already complete stylesheets, like <a href="https://github.com/sindresorhus/github-markdown-css" rel="nofollow">github-markdown-css</a> or <a href="https://tailwindcss.com/docs/typography-plugin" rel="nofollow">Tailwind Typography</a>.',F;return h=new sa({props:{$$slots:{default:[wa]},$$scope:{ctx:$}}}),_=new sa({props:{$$slots:{default:[ya]},$$scope:{ctx:$}}}),w=new sa({props:{$$slots:{default:[$a]},$$scope:{ctx:$}}}),{c(){t=c("h2"),t.innerHTML=o,m=i(),p=c("p"),p.textContent=l,q=i(),N(h.$$.fragment),E=i(),f=c("h3"),f.innerHTML=ta,P=i(),H=c("p"),H.innerHTML=ea,S=i(),g=c("h2"),g.innerHTML=pa,O=i(),C=c("p"),C.textContent=oa,R=i(),x=c("pre"),z=new G(!1),I=i(),v=c("h2"),v.innerHTML=la,j=i(),M=c("p"),M.innerHTML=ca,W=i(),T=c("p"),T.textContent=ua,B=i(),N(_.$$.fragment),D=i(),b=c("p"),b.innerHTML=ia,U=i(),N(w.$$.fragment),Y=i(),y=c("h2"),y.innerHTML=ka,A=i(),L=c("p"),L.innerHTML=ra,this.h()},l(a){t=u(a,"H2",{id:!0,"data-svelte-h":!0}),r(t)!=="svelte-1oq9x79"&&(t.innerHTML=o),m=k(a),p=u(a,"P",{"data-svelte-h":!0}),r(p)!=="svelte-1d8k47q"&&(p.textContent=l),q=k(a),Q(h.$$.fragment,a),E=k(a),f=u(a,"H3",{id:!0,"data-svelte-h":!0}),r(f)!=="svelte-1w3acjm"&&(f.innerHTML=ta),P=k(a),H=u(a,"P",{"data-svelte-h":!0}),r(H)!=="svelte-fatvzl"&&(H.innerHTML=ea),S=k(a),g=u(a,"H2",{id:!0,"data-svelte-h":!0}),r(g)!=="svelte-50vs2h"&&(g.innerHTML=pa),O=k(a),C=u(a,"P",{"data-svelte-h":!0}),r(C)!=="svelte-1p81he7"&&(C.textContent=oa),R=k(a),x=u(a,"PRE",{class:!0});var s=J(x);z=K(s,!1),s.forEach(n),I=k(a),v=u(a,"H2",{id:!0,"data-svelte-h":!0}),r(v)!=="svelte-fxmyja"&&(v.innerHTML=la),j=k(a),M=u(a,"P",{"data-svelte-h":!0}),r(M)!=="svelte-1eehkcf"&&(M.innerHTML=ca),W=k(a),T=u(a,"P",{"data-svelte-h":!0}),r(T)!=="svelte-ex141y"&&(T.textContent=ua),B=k(a),Q(_.$$.fragment,a),D=k(a),b=u(a,"P",{"data-svelte-h":!0}),r(b)!=="svelte-1ebbpib"&&(b.innerHTML=ia),U=k(a),Q(w.$$.fragment,a),Y=k(a),y=u(a,"H2",{id:!0,"data-svelte-h":!0}),r(y)!=="svelte-16btwno"&&(y.innerHTML=ka),A=k(a),L=u(a,"P",{"data-svelte-h":!0}),r(L)!=="svelte-18c97fa"&&(L.innerHTML=ra),this.h()},h(){d(t,"id","customizing-editor-styles"),d(f,"id","using-multiple-themes"),d(g,"id","dark-mode"),z.a=null,d(x,"class","language-css"),d(v,"id","changing-markdown-input-color-theme"),d(y,"id","markdown-stylesheets")},m(a,s){e(a,t,s),e(a,m,s),e(a,p,s),e(a,q,s),V(h,a,s),e(a,E,s),e(a,f,s),e(a,P,s),e(a,H,s),e(a,S,s),e(a,g,s),e(a,O,s),e(a,C,s),e(a,R,s),e(a,x,s),z.m(fa,x),e(a,I,s),e(a,v,s),e(a,j,s),e(a,M,s),e(a,W,s),e(a,T,s),e(a,B,s),V(_,a,s),e(a,D,s),e(a,b,s),e(a,U,s),V(w,a,s),e(a,Y,s),e(a,y,s),e(a,A,s),e(a,L,s),F=!0},p(a,[s]){const ma={};s&1&&(ma.$$scope={dirty:s,ctx:a}),h.$set(ma);const da={};s&1&&(da.$$scope={dirty:s,ctx:a}),_.$set(da);const ha={};s&1&&(ha.$$scope={dirty:s,ctx:a}),w.$set(ha)},i(a){F||(X(h.$$.fragment,a),X(_.$$.fragment,a),X(w.$$.fragment,a),F=!0)},o(a){Z(h.$$.fragment,a),Z(_.$$.fragment,a),Z(w.$$.fragment,a),F=!1},d(a){a&&(n(t),n(m),n(p),n(q),n(E),n(f),n(P),n(H),n(S),n(g),n(O),n(C),n(R),n(x),n(I),n(v),n(j),n(M),n(W),n(T),n(B),n(D),n(b),n(U),n(Y),n(y),n(A),n(L)),aa(h,a),aa(_,a),aa(w,a)}}}const Ta={title:"Editing Styles",section:"Overview"};class ba extends va{constructor(t){super(),_a(this,t,null,Ha,ga,{})}}export{ba as default,Ta as metadata};
