import{s as ps,e as c,a as u,H as z,c as i,l as w,g as r,b as A,m as B,f as a,p as k,i as p,n as U}from"./scheduler.MTTyNl1s.js";import{S as os,i as ls,c as D,a as F,m as G,t as J,b as K,d as N}from"./index.DrAlApqI.js";import{C as Q}from"./Code.BLkHPVHm.js";function cs(H){let t,o,m='<code class="language-undefined">npm i @cartamd/plugin-emoji</code>';return{c(){t=c("pre"),o=new z(!1),this.h()},l(e){t=i(e,"PRE",{class:!0});var l=A(t);o=B(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-undefined")},m(e,l){p(e,t,l),o.m(m,t)},p:U,d(e){e&&a(t)}}}function is(H){let t,o,m=`<code class="language-ts"><span class="token keyword">import</span> <span class="token string">'@cartamd/plugin-emoji/default.css'</span><span class="token punctuation">;</span></code>`;return{c(){t=c("pre"),o=new z(!1),this.h()},l(e){t=i(e,"PRE",{class:!0});var l=A(t);o=B(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-ts")},m(e,l){p(e,t,l),o.m(m,t)},p:U,d(e){e&&a(t)}}}function us(H){let t,o,m=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Carta<span class="token punctuation">,</span> MarkdownEditor <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'carta-md'</span><span class="token punctuation">;</span>
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> emoji <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@cartamd/plugin-emoji'</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
		<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">emoji</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MarkdownEditor</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>carta<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></code>`;return{c(){t=c("pre"),o=new z(!1),this.h()},l(e){t=i(e,"PRE",{class:!0});var l=A(t);o=B(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-svelte")},m(e,l){p(e,t,l),o.m(m,t)},p:U,d(e){e&&a(t)}}}function rs(H){let t,o="This plugin adds support for <strong>Emojis</strong>.",m,e,l='<a href="#installation">Installation</a>',E,f,y,d,V='<a href="#setup">Setup</a>',M,_,W='<a href="#styles">Styles</a>',j,T,X="Import the default theme, or create you own:",L,$,P,h,Y='<a href="#extension">Extension</a>',S,g,R,v,Z='<a href="#options">Options</a>',b,C,ss="Here are the options you can pass to <code>emoji()</code>:",q,x,I,es=`<code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">EmojiExtensionOptions</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">/**
	 * Custom in transition. See https://svelte.dev/docs#run-time-svelte-transition.
	 */</span>
	inTransition<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=></span> TransitionConfig<span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Custom out transition. See https://svelte.dev/docs#run-time-svelte-transition.
	 */</span>
	outTransition<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=></span> TransitionConfig<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,O;return f=new Q({props:{$$slots:{default:[cs]},$$scope:{ctx:H}}}),$=new Q({props:{$$slots:{default:[is]},$$scope:{ctx:H}}}),g=new Q({props:{$$slots:{default:[us]},$$scope:{ctx:H}}}),{c(){t=c("p"),t.innerHTML=o,m=u(),e=c("h2"),e.innerHTML=l,E=u(),D(f.$$.fragment),y=u(),d=c("h2"),d.innerHTML=V,M=u(),_=c("h3"),_.innerHTML=W,j=u(),T=c("p"),T.textContent=X,L=u(),D($.$$.fragment),P=u(),h=c("h3"),h.innerHTML=Y,S=u(),D(g.$$.fragment),R=u(),v=c("h2"),v.innerHTML=Z,b=u(),C=c("p"),C.innerHTML=ss,q=u(),x=c("pre"),I=new z(!1),this.h()},l(s){t=i(s,"P",{"data-svelte-h":!0}),w(t)!=="svelte-f2yslt"&&(t.innerHTML=o),m=r(s),e=i(s,"H2",{id:!0,"data-svelte-h":!0}),w(e)!=="svelte-18vig38"&&(e.innerHTML=l),E=r(s),F(f.$$.fragment,s),y=r(s),d=i(s,"H2",{id:!0,"data-svelte-h":!0}),w(d)!=="svelte-1uj9ei1"&&(d.innerHTML=V),M=r(s),_=i(s,"H3",{id:!0,"data-svelte-h":!0}),w(_)!=="svelte-1obsuhg"&&(_.innerHTML=W),j=r(s),T=i(s,"P",{"data-svelte-h":!0}),w(T)!=="svelte-udn1pg"&&(T.textContent=X),L=r(s),F($.$$.fragment,s),P=r(s),h=i(s,"H3",{id:!0,"data-svelte-h":!0}),w(h)!=="svelte-1h1d05d"&&(h.innerHTML=Y),S=r(s),F(g.$$.fragment,s),R=r(s),v=i(s,"H2",{id:!0,"data-svelte-h":!0}),w(v)!=="svelte-qvxcr2"&&(v.innerHTML=Z),b=r(s),C=i(s,"P",{"data-svelte-h":!0}),w(C)!=="svelte-yv2jcw"&&(C.innerHTML=ss),q=r(s),x=i(s,"PRE",{class:!0});var n=A(x);I=B(n,!1),n.forEach(a),this.h()},h(){k(e,"id","installation"),k(d,"id","setup"),k(_,"id","styles"),k(h,"id","extension"),k(v,"id","options"),I.a=null,k(x,"class","language-ts")},m(s,n){p(s,t,n),p(s,m,n),p(s,e,n),p(s,E,n),G(f,s,n),p(s,y,n),p(s,d,n),p(s,M,n),p(s,_,n),p(s,j,n),p(s,T,n),p(s,L,n),G($,s,n),p(s,P,n),p(s,h,n),p(s,S,n),G(g,s,n),p(s,R,n),p(s,v,n),p(s,b,n),p(s,C,n),p(s,q,n),p(s,x,n),I.m(es,x),O=!0},p(s,[n]){const ts={};n&1&&(ts.$$scope={dirty:n,ctx:s}),f.$set(ts);const ns={};n&1&&(ns.$$scope={dirty:n,ctx:s}),$.$set(ns);const as={};n&1&&(as.$$scope={dirty:n,ctx:s}),g.$set(as)},i(s){O||(J(f.$$.fragment,s),J($.$$.fragment,s),J(g.$$.fragment,s),O=!0)},o(s){K(f.$$.fragment,s),K($.$$.fragment,s),K(g.$$.fragment,s),O=!1},d(s){s&&(a(t),a(m),a(e),a(E),a(y),a(d),a(M),a(_),a(j),a(T),a(L),a(P),a(h),a(S),a(R),a(v),a(b),a(C),a(q),a(x)),N(f,s),N($,s),N(g,s)}}}const ds={section:"Plugins",title:"Emoji"};class _s extends os{constructor(t){super(),ls(this,t,null,rs,ps,{})}}export{_s as default,ds as metadata};
