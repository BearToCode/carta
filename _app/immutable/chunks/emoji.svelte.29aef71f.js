import{s as ps,f as i,a as u,Z as K,g as c,K as w,c as r,h as Z,_ as z,d as a,j as k,i as p,v as Q}from"./scheduler.78c20ad2.js";import{S as os,i as ls,b as A,d as B,m as D,a as F,t as G,e as J}from"./index.e4e0a9e0.js";import{C as N}from"./Code.9bf6eb00.js";function is(H){let t,o,m='<code class="language-undefined">npm i @cartamd/plugin-emoji</code>';return{c(){t=i("pre"),o=new K(!1),this.h()},l(e){t=c(e,"PRE",{class:!0});var l=Z(t);o=z(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-undefined")},m(e,l){p(e,t,l),o.m(m,t)},p:Q,d(e){e&&a(t)}}}function cs(H){let t,o,m=`<code class="language-ts"><span class="token keyword">import</span> <span class="token string">'@cartamd/plugin-emoji/default.css'</span><span class="token punctuation">;</span></code>`;return{c(){t=i("pre"),o=new K(!1),this.h()},l(e){t=c(e,"PRE",{class:!0});var l=Z(t);o=z(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-ts")},m(e,l){p(e,t,l),o.m(m,t)},p:Q,d(e){e&&a(t)}}}function us(H){let t,o,m=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Carta<span class="token punctuation">,</span> CartaEditor <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'carta-md'</span><span class="token punctuation">;</span>
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> emoji <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@cartamd/plugin-emoji'</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
		<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">emoji</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CartaEditor</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>carta<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></code>`;return{c(){t=i("pre"),o=new K(!1),this.h()},l(e){t=c(e,"PRE",{class:!0});var l=Z(t);o=z(l,!1),l.forEach(a),this.h()},h(){o.a=null,k(t,"class","language-svelte")},m(e,l){p(e,t,l),o.m(m,t)},p:Q,d(e){e&&a(t)}}}function rs(H){let t,o="This plugin adds support for <strong>Emojis</strong>.",m,e,l='<a href="#installation">Installation</a>',E,f,y,d,U='<a href="#setup">Setup</a>',j,_,V='<a href="#styles">Styles</a>',L,C,W="Import the default theme, or create you own:",M,$,P,h,X='<a href="#extension">Extension</a>',S,v,R,g,Y='<a href="#options">Options</a>',b,T,ss="Here are the options you can pass to <code>emoji()</code>:",q,x,I,es=`<code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">EmojiExtensionOptions</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">/**
	 * Custom in transition. See https://svelte.dev/docs#run-time-svelte-transition.
	 */</span>
	inTransition<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=></span> TransitionConfig<span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Custom out transition. See https://svelte.dev/docs#run-time-svelte-transition.
	 */</span>
	outTransition<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Element<span class="token punctuation">)</span> <span class="token operator">=></span> TransitionConfig<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,O;return f=new N({props:{$$slots:{default:[is]},$$scope:{ctx:H}}}),$=new N({props:{$$slots:{default:[cs]},$$scope:{ctx:H}}}),v=new N({props:{$$slots:{default:[us]},$$scope:{ctx:H}}}),{c(){t=i("p"),t.innerHTML=o,m=u(),e=i("h2"),e.innerHTML=l,E=u(),A(f.$$.fragment),y=u(),d=i("h2"),d.innerHTML=U,j=u(),_=i("h3"),_.innerHTML=V,L=u(),C=i("p"),C.textContent=W,M=u(),A($.$$.fragment),P=u(),h=i("h3"),h.innerHTML=X,S=u(),A(v.$$.fragment),R=u(),g=i("h2"),g.innerHTML=Y,b=u(),T=i("p"),T.innerHTML=ss,q=u(),x=i("pre"),I=new K(!1),this.h()},l(s){t=c(s,"P",{"data-svelte-h":!0}),w(t)!=="svelte-f2yslt"&&(t.innerHTML=o),m=r(s),e=c(s,"H2",{id:!0,"data-svelte-h":!0}),w(e)!=="svelte-18vig38"&&(e.innerHTML=l),E=r(s),B(f.$$.fragment,s),y=r(s),d=c(s,"H2",{id:!0,"data-svelte-h":!0}),w(d)!=="svelte-1uj9ei1"&&(d.innerHTML=U),j=r(s),_=c(s,"H3",{id:!0,"data-svelte-h":!0}),w(_)!=="svelte-1obsuhg"&&(_.innerHTML=V),L=r(s),C=c(s,"P",{"data-svelte-h":!0}),w(C)!=="svelte-udn1pg"&&(C.textContent=W),M=r(s),B($.$$.fragment,s),P=r(s),h=c(s,"H3",{id:!0,"data-svelte-h":!0}),w(h)!=="svelte-1h1d05d"&&(h.innerHTML=X),S=r(s),B(v.$$.fragment,s),R=r(s),g=c(s,"H2",{id:!0,"data-svelte-h":!0}),w(g)!=="svelte-qvxcr2"&&(g.innerHTML=Y),b=r(s),T=c(s,"P",{"data-svelte-h":!0}),w(T)!=="svelte-yv2jcw"&&(T.innerHTML=ss),q=r(s),x=c(s,"PRE",{class:!0});var n=Z(x);I=z(n,!1),n.forEach(a),this.h()},h(){k(e,"id","installation"),k(d,"id","setup"),k(_,"id","styles"),k(h,"id","extension"),k(g,"id","options"),I.a=null,k(x,"class","language-ts")},m(s,n){p(s,t,n),p(s,m,n),p(s,e,n),p(s,E,n),D(f,s,n),p(s,y,n),p(s,d,n),p(s,j,n),p(s,_,n),p(s,L,n),p(s,C,n),p(s,M,n),D($,s,n),p(s,P,n),p(s,h,n),p(s,S,n),D(v,s,n),p(s,R,n),p(s,g,n),p(s,b,n),p(s,T,n),p(s,q,n),p(s,x,n),I.m(es,x),O=!0},p(s,[n]){const ts={};n&1&&(ts.$$scope={dirty:n,ctx:s}),f.$set(ts);const ns={};n&1&&(ns.$$scope={dirty:n,ctx:s}),$.$set(ns);const as={};n&1&&(as.$$scope={dirty:n,ctx:s}),v.$set(as)},i(s){O||(F(f.$$.fragment,s),F($.$$.fragment,s),F(v.$$.fragment,s),O=!0)},o(s){G(f.$$.fragment,s),G($.$$.fragment,s),G(v.$$.fragment,s),O=!1},d(s){s&&(a(t),a(m),a(e),a(E),a(y),a(d),a(j),a(_),a(L),a(C),a(M),a(P),a(h),a(S),a(R),a(g),a(b),a(T),a(q),a(x)),J(f,s),J($,s),J(v,s)}}}const ds={section:"Plugins",title:"Emoji"};class _s extends os{constructor(t){super(),ls(this,t,null,rs,ps,{})}}export{_s as default,ds as metadata};
