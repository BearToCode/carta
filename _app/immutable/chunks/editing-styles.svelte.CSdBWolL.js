import{s as la,e as c,a as i,c as u,l as m,g as k,p as T,i as p,f as t,H as G,b as J,m as K,n as N}from"./scheduler.DKiYiPX0.js";import{S as ca,i as ua,c as B,a as U,m as W,t as Y,b as A,d as D}from"./index.z4bt_ZBS.js";import{C as F}from"./Code.tlNrnEug.js";function ia(w){let s,o,r=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-editor carta-theme__&lt;theme><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token comment">&lt;!-- ... --></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-toolbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
			<span class="token comment">&lt;!-- Other icons --></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-container mode-&lt;split|tabs><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-input-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-font-code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-font-code<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carta-renderer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token comment">&lt;!-- Rendered Markdown --></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`;return{c(){s=c("pre"),o=new G(!1),this.h()},l(e){s=u(e,"PRE",{class:!0});var l=J(s);o=K(l,!1),l.forEach(t),this.h()},h(){o.a=null,T(s,"class","language-html")},m(e,l){p(e,s,l),o.m(r,s)},p:N,d(e){e&&t(s)}}}function ka(w){let s,o,r=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">// ...</span>
	theme<span class="token operator">:</span> <span class="token string">'github-dark'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){s=c("pre"),o=new G(!1),this.h()},l(e){s=u(e,"PRE",{class:!0});var l=J(s);o=K(l,!1),l.forEach(t),this.h()},h(){o.a=null,T(s,"class","language-ts")},m(e,l){p(e,s,l),o.m(r,s)},p:N,d(e){e&&t(s)}}}function ra(w){let s,o,r=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">// ...</span>
	shikiOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		langs<span class="token operator">:</span> <span class="token comment">// ...</span>
		themes<span class="token operator">:</span> <span class="token comment">// ...</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`;return{c(){s=c("pre"),o=new G(!1),this.h()},l(e){s=u(e,"PRE",{class:!0});var l=J(s);o=K(l,!1),l.forEach(t),this.h()},h(){o.a=null,T(s,"class","language-ts")},m(e,l){p(e,s,l),o.m(r,s)},p:N,d(e){e&&t(s)}}}function ma(w){let s,o='<a href="#customizing-editor-styles">Customizing editor styles</a>',r,e,l="While the core styles are embedded in the Svelte components, the others can be set in a custom stylesheet. Here is what the final rendered HTML looks like.",x,h,L,d,Q='<a href="#using-multiple-themes">Using multiple themes</a>',b,$,V="By using the <code>theme</code> property in the editor you can differentiate the themes of multiple editors.",q,g,X='<a href="#changing-markdown-color-theme">Changing Markdown color theme</a>',P,y,Z='Carta uses <a href="https://shiki.matsu.io/" rel="nofollow">Shiki</a> for syntax highlighting. Two default themes are included in the core package, which are as a <a href="https://shiki.matsu.io/guide/dual-themes" rel="nofollow">dual theme</a> used for light and dark mode.',E,H,aa="You can change theme in the options:",S,f,z,C,sa='If you use a <a href="https://shiki.matsu.io/guide/load-theme" rel="nofollow">custom theme</a>(or also a custom language), you need to specify it, so that it gets loaded into the highlighter:',R,v,O,_,na='<a href="#markdown-stylesheets">Markdown stylesheets</a>',I,M,ta='Markdown is converted into standard HTML, so you can edit the final styles by using standard CSS rules. If you do not wish to create one from the ground up, you can use some already complete stylesheets, like <a href="https://github.com/sindresorhus/github-markdown-css" rel="nofollow">github-markdown-css</a> or <a href="https://tailwindcss.com/docs/typography-plugin" rel="nofollow">Tailwind Typography</a>.',j;return h=new F({props:{$$slots:{default:[ia]},$$scope:{ctx:w}}}),f=new F({props:{$$slots:{default:[ka]},$$scope:{ctx:w}}}),v=new F({props:{$$slots:{default:[ra]},$$scope:{ctx:w}}}),{c(){s=c("h2"),s.innerHTML=o,r=i(),e=c("p"),e.textContent=l,x=i(),B(h.$$.fragment),L=i(),d=c("h3"),d.innerHTML=Q,b=i(),$=c("p"),$.innerHTML=V,q=i(),g=c("h2"),g.innerHTML=X,P=i(),y=c("p"),y.innerHTML=Z,E=i(),H=c("p"),H.textContent=aa,S=i(),B(f.$$.fragment),z=i(),C=c("p"),C.innerHTML=sa,R=i(),B(v.$$.fragment),O=i(),_=c("h2"),_.innerHTML=na,I=i(),M=c("p"),M.innerHTML=ta,this.h()},l(a){s=u(a,"H2",{id:!0,"data-svelte-h":!0}),m(s)!=="svelte-1oq9x79"&&(s.innerHTML=o),r=k(a),e=u(a,"P",{"data-svelte-h":!0}),m(e)!=="svelte-1d8k47q"&&(e.textContent=l),x=k(a),U(h.$$.fragment,a),L=k(a),d=u(a,"H3",{id:!0,"data-svelte-h":!0}),m(d)!=="svelte-1w3acjm"&&(d.innerHTML=Q),b=k(a),$=u(a,"P",{"data-svelte-h":!0}),m($)!=="svelte-15uwwdp"&&($.innerHTML=V),q=k(a),g=u(a,"H2",{id:!0,"data-svelte-h":!0}),m(g)!=="svelte-1pfm4z8"&&(g.innerHTML=X),P=k(a),y=u(a,"P",{"data-svelte-h":!0}),m(y)!=="svelte-1wqeacs"&&(y.innerHTML=Z),E=k(a),H=u(a,"P",{"data-svelte-h":!0}),m(H)!=="svelte-ex141y"&&(H.textContent=aa),S=k(a),U(f.$$.fragment,a),z=k(a),C=u(a,"P",{"data-svelte-h":!0}),m(C)!=="svelte-1w8b113"&&(C.innerHTML=sa),R=k(a),U(v.$$.fragment,a),O=k(a),_=u(a,"H2",{id:!0,"data-svelte-h":!0}),m(_)!=="svelte-16btwno"&&(_.innerHTML=na),I=k(a),M=u(a,"P",{"data-svelte-h":!0}),m(M)!=="svelte-18c97fa"&&(M.innerHTML=ta),this.h()},h(){T(s,"id","customizing-editor-styles"),T(d,"id","using-multiple-themes"),T(g,"id","changing-markdown-color-theme"),T(_,"id","markdown-stylesheets")},m(a,n){p(a,s,n),p(a,r,n),p(a,e,n),p(a,x,n),W(h,a,n),p(a,L,n),p(a,d,n),p(a,b,n),p(a,$,n),p(a,q,n),p(a,g,n),p(a,P,n),p(a,y,n),p(a,E,n),p(a,H,n),p(a,S,n),W(f,a,n),p(a,z,n),p(a,C,n),p(a,R,n),W(v,a,n),p(a,O,n),p(a,_,n),p(a,I,n),p(a,M,n),j=!0},p(a,[n]){const ea={};n&1&&(ea.$$scope={dirty:n,ctx:a}),h.$set(ea);const pa={};n&1&&(pa.$$scope={dirty:n,ctx:a}),f.$set(pa);const oa={};n&1&&(oa.$$scope={dirty:n,ctx:a}),v.$set(oa)},i(a){j||(Y(h.$$.fragment,a),Y(f.$$.fragment,a),Y(v.$$.fragment,a),j=!0)},o(a){A(h.$$.fragment,a),A(f.$$.fragment,a),A(v.$$.fragment,a),j=!1},d(a){a&&(t(s),t(r),t(e),t(x),t(L),t(d),t(b),t($),t(q),t(g),t(P),t(y),t(E),t(H),t(S),t(z),t(C),t(R),t(O),t(_),t(I),t(M)),D(h,a),D(f,a),D(v,a)}}}const fa={title:"Editing Styles",section:"Overview"};class va extends ca{constructor(s){super(),ua(this,s,null,ma,la,{})}}export{va as default,fa as metadata};
