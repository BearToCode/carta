import{s as oa,f as c,a as u,Z as q,g as i,K as $,c as r,h as W,_ as z,d as n,j as k,i as e,v as ta}from"./scheduler.a9223a08.js";import{S as la,i as ca,b as Q,d as V,m as X,a as Y,t as aa,e as sa}from"./index.ee2268cf.js";import{C as na}from"./Code.b5619f7d.js";function ia(H){let t,o,m=`<code class="language-ts"><span class="token keyword">import</span> <span class="token string">'@cartamd/plugin-attachment/default.css'</span><span class="token punctuation">;</span></code>`;return{c(){t=c("pre"),o=new q(!1),this.h()},l(p){t=i(p,"PRE",{class:!0});var l=W(t);o=z(l,!1),l.forEach(n),this.h()},h(){o.a=null,k(t,"class","language-ts")},m(p,l){e(p,t,l),o.m(m,t)},p:ta,d(p){p&&n(t)}}}function ua(H){let t,o,m=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Carta<span class="token punctuation">,</span> CartaEditor <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'carta-md'</span><span class="token punctuation">;</span>
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> attachment <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@cartamd/plugin-attachment'</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
		<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token function">attachment</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
				<span class="token function">upload</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
					<span class="token comment">/* ... */</span>
				<span class="token punctuation">&#125;</span>
			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CartaEditor</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>carta<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></code>`;return{c(){t=c("pre"),o=new q(!1),this.h()},l(p){t=i(p,"PRE",{class:!0});var l=W(t);o=z(l,!1),l.forEach(n),this.h()},h(){o.a=null,k(t,"class","language-svelte")},m(p,l){e(p,t,l),o.m(m,t)},p:ta,d(p){p&&n(t)}}}function ra(H){let t,o="This plugin adds support for attachments.",m,p,l='<a href="#installation">Installation</a>',b,y,M,ea='<code class="language-undefined">npm i @cartamd/plugin-attachment</code>',E,f,K='<a href="#setup">Setup</a>',L,d,Z='<a href="#styles">Styles</a>',P,w,B="Import the default theme, or create you own:",S,h,j,g,D='<a href="#extension">Extension</a>',R,v,I,_,G='<a href="#options">Options</a>',O,C,J="Here are the options you can pass to <code>attachment()</code>:",A,x,F,pa=`<code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AttachmentExtensionOptions</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">/**
	 * Upload a file to the server. Return the url of the uploaded file.
	 * If an error occurs, return null. This function does **not** handle errors.
	 * @param file The file to upload
	 * @returns The uploaded file url, or null if it failed
	 */</span>
	<span class="token function-variable function">upload</span><span class="token operator">:</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> File<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">></span><span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Supported mime types.
	 *
	 * @default ['image/png', 'image/jpeg', 'image/gif', 'image/svg+xml'].
	 */</span>
	supportedMimeTypes<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Whether to disable the attach icon.
	 *
	 * @default false
	 */</span>
	disableIcon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Custom drop overlay component. Use &#96;false&#96; to disable the overlay.
	 */</span>
	dropOverlay<span class="token operator">?</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token operator">|</span> <span class="token keyword">typeof</span> SvelteComponent<span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Custom loading overlay component. Use &#96;false&#96; to disable the overlay.
	 */</span>
	loadingOverlay<span class="token operator">?</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token operator">|</span> <span class="token keyword">typeof</span> SvelteComponent<span class="token operator">&lt;</span><span class="token punctuation">&#123;</span> uploadingFiles<span class="token operator">:</span> Writable<span class="token operator">&lt;</span>File<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,U;return h=new na({props:{$$slots:{default:[ia]},$$scope:{ctx:H}}}),v=new na({props:{$$slots:{default:[ua]},$$scope:{ctx:H}}}),{c(){t=c("p"),t.textContent=o,m=u(),p=c("h2"),p.innerHTML=l,b=u(),y=c("pre"),M=new q(!1),E=u(),f=c("h2"),f.innerHTML=K,L=u(),d=c("h3"),d.innerHTML=Z,P=u(),w=c("p"),w.textContent=B,S=u(),Q(h.$$.fragment),j=u(),g=c("h3"),g.innerHTML=D,R=u(),Q(v.$$.fragment),I=u(),_=c("h2"),_.innerHTML=G,O=u(),C=c("p"),C.innerHTML=J,A=u(),x=c("pre"),F=new q(!1),this.h()},l(a){t=i(a,"P",{["data-svelte-h"]:!0}),$(t)!=="svelte-epoik3"&&(t.textContent=o),m=r(a),p=i(a,"H2",{id:!0,["data-svelte-h"]:!0}),$(p)!=="svelte-18vig38"&&(p.innerHTML=l),b=r(a),y=i(a,"PRE",{class:!0});var s=W(y);M=z(s,!1),s.forEach(n),E=r(a),f=i(a,"H2",{id:!0,["data-svelte-h"]:!0}),$(f)!=="svelte-1uj9ei1"&&(f.innerHTML=K),L=r(a),d=i(a,"H3",{id:!0,["data-svelte-h"]:!0}),$(d)!=="svelte-1obsuhg"&&(d.innerHTML=Z),P=r(a),w=i(a,"P",{["data-svelte-h"]:!0}),$(w)!=="svelte-udn1pg"&&(w.textContent=B),S=r(a),V(h.$$.fragment,a),j=r(a),g=i(a,"H3",{id:!0,["data-svelte-h"]:!0}),$(g)!=="svelte-1h1d05d"&&(g.innerHTML=D),R=r(a),V(v.$$.fragment,a),I=r(a),_=i(a,"H2",{id:!0,["data-svelte-h"]:!0}),$(_)!=="svelte-qvxcr2"&&(_.innerHTML=G),O=r(a),C=i(a,"P",{["data-svelte-h"]:!0}),$(C)!=="svelte-j0z1h5"&&(C.innerHTML=J),A=r(a),x=i(a,"PRE",{class:!0});var T=W(x);F=z(T,!1),T.forEach(n),this.h()},h(){k(p,"id","installation"),M.a=null,k(y,"class","language-undefined"),k(f,"id","setup"),k(d,"id","styles"),k(g,"id","extension"),k(_,"id","options"),F.a=null,k(x,"class","language-ts")},m(a,s){e(a,t,s),e(a,m,s),e(a,p,s),e(a,b,s),e(a,y,s),M.m(ea,y),e(a,E,s),e(a,f,s),e(a,L,s),e(a,d,s),e(a,P,s),e(a,w,s),e(a,S,s),X(h,a,s),e(a,j,s),e(a,g,s),e(a,R,s),X(v,a,s),e(a,I,s),e(a,_,s),e(a,O,s),e(a,C,s),e(a,A,s),e(a,x,s),F.m(pa,x),U=!0},p(a,[s]){const T={};s&1&&(T.$$scope={dirty:s,ctx:a}),h.$set(T);const N={};s&1&&(N.$$scope={dirty:s,ctx:a}),v.$set(N)},i(a){U||(Y(h.$$.fragment,a),Y(v.$$.fragment,a),U=!0)},o(a){aa(h.$$.fragment,a),aa(v.$$.fragment,a),U=!1},d(a){a&&(n(t),n(m),n(p),n(b),n(y),n(E),n(f),n(L),n(d),n(P),n(w),n(S),n(j),n(g),n(R),n(I),n(_),n(O),n(C),n(A),n(x)),sa(h,a),sa(v,a)}}}const da={section:"Plugins",title:"Attachment"};class ha extends la{constructor(t){super(),ca(this,t,null,ra,oa,{})}}export{ha as default,da as metadata};
