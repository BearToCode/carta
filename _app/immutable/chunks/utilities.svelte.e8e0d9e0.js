import{s as J,f as p,a as r,Z as b,g as l,K as v,c as i,h as E,_ as R,d as n,j as _,i as t,v as j}from"./scheduler.78c20ad2.js";import{S as O,i as Q}from"./index.e4e0a9e0.js";function V(B){let e,A='<a href="#cartarender"><code>Carta.render</code></a>',h,u,U="Allows you to render Markdown asynchronously.",y,k,g,D=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">/* ... */</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> markdown <span class="token operator">=</span> <span class="token string">'# Some Markdown'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> carta<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>markdown<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,C,o,q='<a href="#cartarenderssr"><code>Carta.renderSSR</code></a>',x,d,z="Allows you to render Markdown synchronously, suitable for Server Side Rendering. Note that particular extensions that add content asynchronously will not work in this configuration.",H,m,M,F=`<code class="language-ts"><span class="token keyword">const</span> carta <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Carta</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token comment">/* ... */</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> markdown <span class="token operator">=</span> <span class="token string">'# Some Markdown'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> carta<span class="token punctuation">.</span><span class="token function">renderSSR</span><span class="token punctuation">(</span>markdown<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,S,c,I='<a href="#cartabindtocaret"><code>Carta.bindToCaret</code></a>',T,w,K="Svelte action that allows you to bind a specific element to the caret position. Used, for example, in <code>plugin-emoji</code> and <code>plugin-slash</code>.",L,f,P,G=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">export</span> <span class="token keyword">let</span> carta<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">use:</span>carta.bindToCaret</span><span class="token punctuation">></span></span>
	<span class="token comment">&lt;!-- ... --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`;return{c(){e=p("h2"),e.innerHTML=A,h=r(),u=p("p"),u.textContent=U,y=r(),k=p("pre"),g=new b(!1),C=r(),o=p("h2"),o.innerHTML=q,x=r(),d=p("p"),d.textContent=z,H=r(),m=p("pre"),M=new b(!1),S=r(),c=p("h2"),c.innerHTML=I,T=r(),w=p("p"),w.innerHTML=K,L=r(),f=p("pre"),P=new b(!1),this.h()},l(a){e=l(a,"H2",{id:!0,"data-svelte-h":!0}),v(e)!=="svelte-1y6zwes"&&(e.innerHTML=A),h=i(a),u=l(a,"P",{"data-svelte-h":!0}),v(u)!=="svelte-op5yrc"&&(u.textContent=U),y=i(a),k=l(a,"PRE",{class:!0});var s=E(k);g=R(s,!1),s.forEach(n),C=i(a),o=l(a,"H2",{id:!0,"data-svelte-h":!0}),v(o)!=="svelte-1529vv2"&&(o.innerHTML=q),x=i(a),d=l(a,"P",{"data-svelte-h":!0}),v(d)!=="svelte-1p2jyea"&&(d.textContent=z),H=i(a),m=l(a,"PRE",{class:!0});var N=E(m);M=R(N,!1),N.forEach(n),S=i(a),c=l(a,"H2",{id:!0,"data-svelte-h":!0}),v(c)!=="svelte-14p8c6l"&&(c.innerHTML=I),T=i(a),w=l(a,"P",{"data-svelte-h":!0}),v(w)!=="svelte-w29tmn"&&(w.innerHTML=K),L=i(a),f=l(a,"PRE",{class:!0});var Z=E(f);P=R(Z,!1),Z.forEach(n),this.h()},h(){_(e,"id","cartarender"),g.a=null,_(k,"class","language-ts"),_(o,"id","cartarenderssr"),M.a=null,_(m,"class","language-ts"),_(c,"id","cartabindtocaret"),P.a=null,_(f,"class","language-svelte")},m(a,s){t(a,e,s),t(a,h,s),t(a,u,s),t(a,y,s),t(a,k,s),g.m(D,k),t(a,C,s),t(a,o,s),t(a,x,s),t(a,d,s),t(a,H,s),t(a,m,s),M.m(F,m),t(a,S,s),t(a,c,s),t(a,T,s),t(a,w,s),t(a,L,s),t(a,f,s),P.m(G,f)},p:j,i:j,o:j,d(a){a&&(n(e),n(h),n(u),n(y),n(k),n(C),n(o),n(x),n(d),n(H),n(m),n(S),n(c),n(T),n(w),n(L),n(f))}}}const Y={section:"API",title:"Utilities"};class $ extends O{constructor(e){super(),Q(this,e,null,V,J,{})}}export{$ as default,Y as metadata};
