import{t as $,h as N,a as E}from"../chunks/BPY3BYQk.js";import"../chunks/CXEd6lrE.js";import{s as t,f as U,$ as W,c as j,b as Y,r as q}from"../chunks/CQjQfKBs.js";import{a as d,b as J,t as a}from"../chunks/CCNVrShP.js";import{b as K}from"../chunks/B-4rJ50D.js";var Q=$('<meta name="description" content="Core API for Carta.">'),V=$(`<span class="section">API</span> <h1 class="title">Core</h1> <h2 id="carta-options"><code>Carta</code> options</h2> <p>List of options that can be used when creating <code>Carta</code>:</p> <h3 id="gfm-options"><code>gfmOptions</code></h3> <p>Type: <code>GfmOptions</code></p> <p>GitHub Flavored Markdown options.</p> <h3 id="extensions"><code>extensions</code></h3> <p>Type: <code>Extension[]</code></p> <p>List of extensions(plugins) to use.</p> <h3 id="renderer-debounce"><code>rendererDebounce</code></h3> <p>Type: <code>number</code></p> <p>Rendering debouncing timeout, in milliseconds. Defaults to 300ms.</p> <h3 id="disable-shortcuts"><code>disableShortcuts</code></h3> <p>Type: <code>DefaultShortcutId[] | true</code></p> <p>Remove default shortcuts by id. You can use <code>true</code> to disable all of them.</p> <h3 id="disable-icons"><code>disableIcons</code></h3> <p>Type: <code>DefaultIconId[] | true</code></p> <p>Remove default icons by id. You can use <code>true</code> to disable all of them.</p> <h3 id="disable-prefixes"><code>disablePrefixes</code></h3> <p>Type: <code>DefaultPrefixId[] | true</code></p> <p>Remove default prefixes by id. You can use <code>true</code> to disable all of them.</p> <h3 id="disable-tab-outs"><code>disableTabOuts</code></h3> <p>Type: <code>DefaultTabOutId[] | true</code></p> <p>Remove default tab-outs by id. You can use <code>true</code> to disable all of them.</p> <h3 id="history-options"><code>historyOptions</code></h3> <p>History management options.</p> <h4><code>historyOptions.minInterval</code></h4> <p>Type: <code>number</code></p> <p>Minimum interval between save states in milliseconds. Defaults to 300ms.</p> <h4><code>historyOptions.maxSize</code></h4> <p>Type: <code>number</code></p> Maximum history size in bytes. Defaults to 1MB. <h3 id="sanitizer"><code>sanitizer</code></h3> <p>Type: <code>(html: string) => void</code></p> <p>HTML sanitizer. See here for <a>more</a> details.</p> <h3 id="shiki-options"><code>shikiOptions</code></h3> <p>Type: <code>ShikiOptions</code></p> <p>Highlighter(Shiki) options.</p> <h3 id="theme"><code>theme</code></h3> <p>Type: <code>Theme | DualTheme</code></p> <p>Shiki theme to use to highlight Markdown.</p> <h2 id="markdown-editor-options"><code>MarkdownEditor</code> options</h2> <p>List of options that can be used in the <code>&lt;MarkdownEditor&gt;</code> component.</p> <h3 id="editor-carta"><code>carta</code></h3> <p>Type: <code>Carta</code></p> <p>Carta instance to use for this editor.</p> <h3 id="editor-theme"><code>theme</code></h3> <p>Type: <code>string</code></p> <p>The theme of this editor. The editor and related elements will have <code>carta-theme_&lt;theme&gt;</code> as a class.</p> <h3 id="editor-value"><code>value</code></h3> <p>Type: <code>string</code></p> <p>Current Markdown input value.</p> <h3 id="mode"><code>mode</code></h3> <p>Type: <code>'tabs' | 'split' | 'auto'</code></p> <p>Editor windows mode. With <code>auto</code> it will split when the window size is greater than 768px.</p> <h3 id="scroll"><code>scroll</code></h3> <p>Type: <code>'sync' | 'async'</code></p> <p>Scroll synchronization.</p> <h3 id="disable-toolbar"><code>disableToolbar</code></h3> <p>Type: <code>boolean</code></p> <p>Option to disable the toolbar.</p> <h3 id="placeholder"><code>placeholder</code></h3> <p>Type: <code>string</code></p> <p>Set the textarea placeholder.</p> <h3 id="textarea"><code>textarea</code></h3> <p>Type: <code>TextAreaProps</code> (extends <code>Record&lt;string, unknown&gt;</code>)</p> <p>Additional properties that will be used in the textarea used under the hood in the editor. <code>class</code>, <code>placeholder</code> and <code>value</code> are not allowed. Use the corresponding editor properties
	instead.</p> <h3 id="labels"><code>labels</code></h3> <p>Type: <code>Partial&lt;Labels&gt;</code></p> <p>Can be used to provide custom text for labels in the editor.</p> <h3 id="highlight-delay"><code>highlightDelay</code></h3> <p>Type: <code>number</code></p> <p>Highlight delay in milliseconds. Defaults to 250ms.</p> <h2 id="markdown-options"><code>Markdown</code> options</h2> <p>List of options that can be used in the <code>&lt;Markdown&gt;</code> component.</p> <h3 id="markdown-carta"><code>carta</code></h3> <p>Type: <code>Carta</code></p> <p>Carta instance to use for this editor.</p> <h3 id="markdown-theme"><code>theme</code></h3> <p>Type: <code>string</code></p> <p>The theme to use. The element will have <code>carta-theme_&lt;theme&gt;</code> as a class.</p> <h3 id="markdown-value"><code>value</code></h3> <p>Type: <code>string</code></p> <p>Current Markdown input value.</p> <h3 id="selected-tab"><p>selectedTab</p></h3> <p>Type: <code>'write' | 'preview'</code></p> <p>The selected editor tab.</p> <h3 id="pre-rendered-options"><code>PreRendered</code> options</h3> <p>List of options that can be used in the <code>&lt;PreRendered&gt;</code> component.</p> <h3 id="html"><code>html</code></h3> <p>Type: <code>string</code></p> <p>The HTML to render. It is <code>NOT</code> sanitized.</p> <h3 id="pre-rendered-theme"><code>theme</code></h3> <p>Type: <code>string</code></p> <p>The theme to use. The element will have <code>carta-theme_&lt;theme&gt;</code> as a class.</p>`,1);function de(G){var c=V();N(o=>{var e=Q();W.title="Core - Carta",E(o,e)});var p=t(U(c),4);d(p,o=>{var e;return(e=a)==null?void 0:e(o)});var r=t(p,4);d(r,o=>{var e;return(e=a)==null?void 0:e(o)});var h=t(r,6);d(h,o=>{var e;return(e=a)==null?void 0:e(o)});var s=t(h,6);d(s,o=>{var e;return(e=a)==null?void 0:e(o)});var n=t(s,6);d(n,o=>{var e;return(e=a)==null?void 0:e(o)});var l=t(n,6);d(l,o=>{var e;return(e=a)==null?void 0:e(o)});var m=t(l,6);d(m,o=>{var e;return(e=a)==null?void 0:e(o)});var u=t(m,6);d(u,o=>{var e;return(e=a)==null?void 0:e(o)});var v=t(u,6);d(v,o=>{var e;return(e=a)==null?void 0:e(o)});var b=t(v,14);d(b,o=>{var e;return(e=a)==null?void 0:e(o)});var i=t(b,4),B=t(j(i));J(B,"href",`${K??""}/getting-started#sanitization`),Y(),q(i);var T=t(i,2);d(T,o=>{var e;return(e=a)==null?void 0:e(o)});var y=t(T,6);d(y,o=>{var e;return(e=a)==null?void 0:e(o)});var f=t(y,6);d(f,o=>{var e;return(e=a)==null?void 0:e(o)});var g=t(f,4);d(g,o=>{var e;return(e=a)==null?void 0:e(o)});var _=t(g,6);d(_,o=>{var e;return(e=a)==null?void 0:e(o)});var w=t(_,6);d(w,o=>{var e;return(e=a)==null?void 0:e(o)});var k=t(w,6);d(k,o=>{var e;return(e=a)==null?void 0:e(o)});var x=t(k,6);d(x,o=>{var e;return(e=a)==null?void 0:e(o)});var C=t(x,6);d(C,o=>{var e;return(e=a)==null?void 0:e(o)});var M=t(C,6);d(M,o=>{var e;return(e=a)==null?void 0:e(o)});var D=t(M,6);d(D,o=>{var e;return(e=a)==null?void 0:e(o)});var O=t(D,6);d(O,o=>{var e;return(e=a)==null?void 0:e(o)});var I=t(O,6);d(I,o=>{var e;return(e=a)==null?void 0:e(o)});var z=t(I,6);d(z,o=>{var e;return(e=a)==null?void 0:e(o)});var S=t(z,4);d(S,o=>{var e;return(e=a)==null?void 0:e(o)});var L=t(S,6);d(L,o=>{var e;return(e=a)==null?void 0:e(o)});var P=t(L,6);d(P,o=>{var e;return(e=a)==null?void 0:e(o)});var R=t(P,6);d(R,o=>{var e;return(e=a)==null?void 0:e(o)});var H=t(R,6);d(H,o=>{var e;return(e=a)==null?void 0:e(o)});var A=t(H,4);d(A,o=>{var e;return(e=a)==null?void 0:e(o)});var F=t(A,6);d(F,o=>{var e;return(e=a)==null?void 0:e(o)}),Y(4),E(G,c)}export{de as component};
