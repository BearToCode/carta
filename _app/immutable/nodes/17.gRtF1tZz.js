import{t as T,h as Z,a as f}from"../chunks/BPY3BYQk.js";import{p as z,s as e,f as C,a as P,$ as B,c as k,b as v,r as b}from"../chunks/CQjQfKBs.js";import{a as o,b as I,t as r}from"../chunks/CCNVrShP.js";import{b as j}from"../chunks/DR0DiO7x.js";import{C as n}from"../chunks/B5vJv_-j.js";var w=T('<meta name="description" content="TikZ Plugin for Carta. This plugin adds support for TikZ diagrams.">'),O=T(`<span class="section">Plugins</span> <h1 class="title">TikZ</h1> <p>This plugin adds support for <strong>PGF/TikZ</strong> illustrations thanks to <a href="https://tikzjax.com/" target="_blank">TikZJax</a>. It uses the code generated for the <a href="https://github.com/artisticat1/obsidian-tikzjax" target="_blank">Obsidian-TikZ plugin</a>.</p> <h2 id="important-notes">Important Notes</h2> <ul><li>This plugin requires the import of a <strong>heavy</strong> library (~7Mb), which is dynamically
		imported at runtime. This can be avoided by <a>pre-rendering</a> content on the server;</li> <li>You need to update your sanitizer to allow the specific tag: <code>&lt;div type="text/tikz"&gt;</code></li></ul> <h2 id="installation">Installation</h2> <!> <h2 id="setup">Setup</h2> <!> <h2 id="options">Options</h2> <p>Here are the options you can pass to <code>tikz()</code>:</p> <!>`,1);function M(_,i){z(i,!0);var d=O();Z(a=>{var t=w();B.title="TikZ Plugin - Carta",f(a,t)});var l=e(C(d),6);o(l,a=>{var t;return(t=r)==null?void 0:t(a)});var s=e(l,2),p=k(s),y=e(k(p),3);I(y,"href",`${j??""}/getting-started#pre-rendering`),v(),b(p),v(2),b(s);var h=e(s,2);o(h,a=>{var t;return(t=r)==null?void 0:t(a)});var c=e(h,2);n(c,{get code(){return i.data.codeBlocks.installation}});var u=e(c,2);o(u,a=>{var t;return(t=r)==null?void 0:t(a)});var g=e(u,2);n(g,{get code(){return i.data.codeBlocks.extension}});var m=e(g,2);o(m,a=>{var t;return(t=r)==null?void 0:t(a)});var x=e(m,4);n(x,{get code(){return i.data.codeBlocks.options}}),f(_,d),P()}export{M as component};
